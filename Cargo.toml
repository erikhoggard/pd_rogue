cargo-features = ["edition2024"]
[package]
name = "bideo_game"
version = "0.1.0"
edition = "2024"

[lib]
path = "src/lib.rs"
crate-type = [
	"staticlib", # for hardware
	"dylib",     # for simulator
	"rlib",      # to link with bin
]

[dependencies]
bevy_ecs = { git = "https://github.com/bevyengine/bevy", default-features = false, features = ["bevy_reflect"]}
bevy_app = { git = "https://github.com/bevyengine/bevy", default-features = false }
bevy_math = { git = "https://github.com/bevyengine/bevy", default-features = false, features = ["libm", "alloc"] }
bevy_reflect = { git = "https://github.com/bevyengine/bevy", default-features = false, features = ["bevy"]}
bevy_transform = { git = "https://github.com/bevyengine/bevy", default-features = false, features = ["libm", "alloc", "bevy-support"] }
playdate = "*"


# Playdate Package Info
# doc: https://github.com/boozook/playdate/blob/main/support/build/README.md#metadata
# official doc: https://sdk.play.date/#pdxinfo
[package.metadata.playdate]
name = "bideo_game"
author = "You, Inc"
version = "0.1.0"
bundle-id = "com.yourcompany.bideo.game"
description = "Description for the bideo_game program."
build-number = 1

content-warning = "This game contains mild realistic, violence and bloodshed."
content-warning2 = "Really scary game."

image-path = "img/system"
launch-sound-path = "sfx/jump"


# Assets Rules
# doc: https://github.com/boozook/playdate/blob/main/support/build/README.md#assets
[package.metadata.playdate.assets]
"img/system/" = "${PLAYDATE_SDK_PATH}/Examples/Game Template/Source/SystemAssets/*.png"
"sfx/jump.wav" = "${PLAYDATE_SDK_PATH}/Examples/Level 1-1/Source/sfx/jump.wav"
# This is a complex way of specifying what assets should be included.
# Left hand is a path where asset should be in the package,
# Right hand is the path where source(s) should be found.

# Also this way supports simple include and exclude instructions:
# "rel-to-crate-root/file-to-include" = true   # left hand is a local path, relative to crate-root,
# "file-to-exclude" = false  # OR resulting path that where asset will be in the resulting package.

# Another way to declare assets is much simpler:
# [package.metadata.playdate]
# assets = ["assets/**/*.wav", "assets/**/*.png"]
# That means "just include all of this".


# Assets Configuration
[package.metadata.playdate.options.assets]
dependencies = true    # allow to build assets for dependencies (default is `true`)
overwrite = true       # overwrite existing (default is `true`)
method = "link"        # "copy" or "link"   (default is `link`)
follow-symlinks = true # follow symlinks    (default is `true`)
